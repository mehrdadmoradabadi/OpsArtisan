#!/bin/bash
#
# Firewall application script
# Generated by OpsArtisan
# Type: {{ firewall_type }}
#

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

FIREWALL_TYPE="{{ firewall_type }}"
RULES_FILE="firewall-rules.txt"

echo -e "${BLUE}==> Firewall Configuration Script${NC}"
echo -e "Type: ${FIREWALL_TYPE}"
echo ""

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}ERROR: This script must be run as root${NC}"
    exit 1
fi

# Safety check
echo -e "${YELLOW}⚠️  WARNING: This will modify firewall rules${NC}"
echo -e "${YELLOW}⚠️  Ensure you have console access before continuing${NC}"
echo ""
echo -e "Current SSH connection: ${SSH_CONNECTION:-Not connected via SSH}"
{% if allow_ssh %}
echo -e "SSH will be allowed on port {{ ssh_port }}"
{% else %}
echo -e "${RED}WARNING: SSH access is not enabled in rules!${NC}"
{% endif %}
echo ""
read -p "Do you want to continue? (yes/no) " -r
if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
    echo "Aborted"
    exit 0
fi

# Backup current rules
echo -e "${BLUE}==> Backing up current rules${NC}"
bash scripts/backup-rules.sh

{% if firewall_type == 'ufw' %}
# Check if UFW is installed
if ! command -v ufw &> /dev/null; then
    echo -e "${YELLOW}UFW not found, installing...${NC}"
    apt-get update
    apt-get install -y ufw
fi

echo -e "${BLUE}==> Applying UFW rules${NC}"

# Execute rules from file
while IFS= read -r line; do
    # Skip comments and empty lines
    [[ "$line" =~ ^#.*$ ]] && continue
    [[ -z "$line" ]] && continue

    echo "Executing: $line"
    eval "$line" || echo -e "${YELLOW}Warning: Command failed: $line${NC}"
done < "${RULES_FILE}"

echo -e "${GREEN}✓ UFW rules applied${NC}"

# Show status
echo ""
echo -e "${BLUE}==> UFW Status${NC}"
ufw status verbose

{% elif firewall_type == 'iptables' %}
# Check if iptables is installed
if ! command -v iptables &> /dev/null; then
    echo -e "${RED}ERROR: iptables not found${NC}"
    exit 1
fi

echo -e "${BLUE}==> Applying iptables rules${NC}"

# Flush existing rules
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X

# Apply rules
iptables-restore < "${RULES_FILE}"

echo -e "${GREEN}✓ iptables rules applied${NC}"

# Show rules
echo ""
echo -e "${BLUE}==> Current iptables rules${NC}"
iptables -L -n -v

# Make persistent
echo ""
echo -e "${BLUE}==> Making rules persistent${NC}"

{% if configuration_mode == 'advanced' %}
case "{{ persistence_method }}" in
    netfilter-persistent)
        if command -v netfilter-persistent &> /dev/null; then
            netfilter-persistent save
        else
            apt-get install -y netfilter-persistent
            netfilter-persistent save
        fi
        ;;
    iptables-persistent)
        if command -v iptables-save &> /dev/null; then
            iptables-save > /etc/iptables/rules.v4
            ip6tables-save > /etc/iptables/rules.v6
        else
            apt-get install -y iptables-persistent
        fi
        ;;
    systemd)
        cat > /etc/systemd/system/iptables-restore.service << 'EOF'
[Unit]
Description=Restore iptables rules
Before=network-pre.target

[Service]
Type=oneshot
ExecStart=/sbin/iptables-restore /etc/iptables/rules.v4

[Install]
WantedBy=multi-user.target
EOF
        iptables-save > /etc/iptables/rules.v4
        systemctl enable iptables-restore.service
        ;;
    rc-local)
        iptables-save > /etc/iptables/rules.v4
        echo "iptables-restore < /etc/iptables/rules.v4" >> /etc/rc.local
        chmod +x /etc/rc.local
        ;;
esac
{% else %}
# Try to install iptables-persistent
if ! command -v netfilter-persistent &> /dev/null; then
    echo "Installing iptables-persistent..."
    apt-get install -y iptables-persistent
fi
netfilter-persistent save
{% endif %}

echo -e "${GREEN}✓ Rules saved for persistence${NC}"

{% elif firewall_type == 'nftables' %}
# Check if nftables is installed
if ! command -v nft &> /dev/null; then
    echo -e "${YELLOW}nftables not found, installing...${NC}"
    apt-get update
    apt-get install -y nftables
fi

echo -e "${BLUE}==> Applying nftables rules${NC}"

# Apply rules
nft -f "${RULES_FILE}"

echo -e "${GREEN}✓ nftables rules applied${NC}"

# Show rules
echo ""
echo -e "${BLUE}==> Current nftables rules${NC}"
nft list ruleset

# Make persistent
echo ""
echo -e "${BLUE}==> Making rules persistent${NC}"
cp "${RULES_FILE}" /etc/nftables.conf

# Enable nftables service
systemctl enable nftables.service
systemctl restart nftables.service

echo -e "${GREEN}✓ Rules saved for persistence${NC}"
{% endif %}

echo ""
echo -e "${GREEN}==> Firewall configuration complete!${NC}"
echo ""
echo -e "${YELLOW}Important:${NC}"
echo "  1. Test connectivity from allowed IPs"
echo "  2. Verify SSH access works"
echo "  3. Check application access"
{% if enable_logging %}
echo "  4. Monitor logs: bash scripts/monitor-firewall.sh"
{% endif %}
echo ""
echo "If locked out, restore backup via console:"
echo "  bash scripts/backup-rules.sh restore"
