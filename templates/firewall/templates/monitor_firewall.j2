{% if enable_logging %}
#!/bin/bash
#
# Firewall log monitoring script
# Generated by OpsArtisan
#

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

FIREWALL_TYPE="{{ firewall_type }}"

show_help() {
    cat << EOF
${BLUE}Firewall Log Monitor${NC}

Usage: $0 [options]

Options:
  -f, --follow      Follow logs in real-time
  -n, --lines NUM   Show last NUM lines (default: 50)
  -s, --stats       Show statistics
  -t, --top         Show top blocked IPs
  -h, --help        Show this help

Examples:
  $0 -f             # Follow logs
  $0 -n 100         # Show last 100 lines
  $0 --stats        # Show statistics
  $0 --top          # Show top blocked IPs

EOF
}

show_stats() {
    echo -e "${BLUE}==> Firewall Statistics${NC}"
    echo ""

    {% if firewall_type == 'ufw' %}
    LOG_FILE="/var/log/ufw.log"
    if [ -f "${LOG_FILE}" ]; then
        echo "Total blocked connections:"
        grep -c "BLOCK" "${LOG_FILE}" 2>/dev/null || echo "0"
        echo ""

        echo "Blocks by protocol:"
        grep "BLOCK" "${LOG_FILE}" | awk '{print $NF}' | sort | uniq -c | sort -rn | head -10
    fi

    {% elif firewall_type == 'iptables' %}
    echo "Checking kernel logs for iptables drops..."
    journalctl -k | grep "IPTables-Dropped" | wc -l

    {% elif firewall_type == 'nftables' %}
    echo "Checking kernel logs for nftables drops..."
    journalctl -k | grep "nftables-dropped" | wc -l
    {% endif %}
}

show_top_ips() {
    echo -e "${BLUE}==> Top Blocked IPs${NC}"
    echo ""

    {% if firewall_type == 'ufw' %}
    LOG_FILE="/var/log/ufw.log"
    if [ -f "${LOG_FILE}" ]; then
        grep "BLOCK" "${LOG_FILE}" | grep -oP 'SRC=\K[0-9.]+' | sort | uniq -c | sort -rn | head -20
    fi

    {% elif firewall_type == 'iptables' or firewall_type == 'nftables' %}
    journalctl -k | grep -i "dropped" | grep -oP 'SRC=[0-9.]+' | cut -d= -f2 | sort | uniq -c | sort -rn | head -20
    {% endif %}
}

# Parse arguments
FOLLOW=false
LINES=50
STATS=false
TOP=false

while [[ $# -gt 0 ]]; do
    case $1 in
        -f|--follow)
            FOLLOW=true
            shift
            ;;
        -n|--lines)
            LINES="$2"
            shift 2
            ;;
        -s|--stats)
            STATS=true
            shift
            ;;
        -t|--top)
            TOP=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            show_help
            exit 1
            ;;
    esac
done

# Show statistics
if [ "$STATS" = true ]; then
    show_stats
    exit 0
fi

# Show top IPs
if [ "$TOP" = true ]; then
    show_top_ips
    exit 0
fi

# Show logs
echo -e "${BLUE}==> Firewall Logs${NC}"
if [ "$FOLLOW" = true ]; then
    echo "Following logs... Press Ctrl+C to exit"
    echo ""
fi

{% if firewall_type == 'ufw' %}
LOG_FILE="/var/log/ufw.log"
if [ "$FOLLOW" = true ]; then
    tail -f "${LOG_FILE}" | grep --line-buffered "BLOCK\|ALLOW" | \
        sed "s/BLOCK/${RED}BLOCK${NC}/g" | sed "s/ALLOW/${GREEN}ALLOW${NC}/g"
else
    tail -n "${LINES}" "${LOG_FILE}" | grep "BLOCK\|ALLOW" | \
        sed "s/BLOCK/${RED}BLOCK${NC}/g" | sed "s/ALLOW/${GREEN}ALLOW${NC}/g"
fi

{% elif firewall_type == 'iptables' %}
if [ "$FOLLOW" = true ]; then
    journalctl -kf | grep --line-buffered "IPTables-Dropped"
else
    journalctl -k -n "${LINES}" | grep "IPTables-Dropped"
fi

{% elif firewall_type == 'nftables' %}
if [ "$FOLLOW" = true ]; then
    journalctl -kf | grep --line-buffered "nftables-dropped"
else
    journalctl -k -n "${LINES}" | grep "nftables-dropped"
fi
{% endif %}
{% endif %}
