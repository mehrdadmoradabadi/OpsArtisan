{% if configuration_mode == 'advanced' %}
#!/bin/bash
#
# Firewall testing script
# Generated by OpsArtisan
#

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}==> Firewall Test Suite${NC}"
echo ""

# Test counter
PASSED=0
FAILED=0

test_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}✓ PASS${NC}: $2"
        ((PASSED++))
    else
        echo -e "${RED}✗ FAIL${NC}: $2"
        ((FAILED++))
    fi
}

# Test 1: Firewall is active
echo "Testing firewall status..."
{% if firewall_type == 'ufw' %}
if ufw status | grep -q "Status: active"; then
    test_result 0 "UFW is active"
else
    test_result 1 "UFW is not active"
fi

{% elif firewall_type == 'iptables' %}
if iptables -L -n | grep -q "Chain INPUT"; then
    test_result 0 "iptables rules loaded"
else
    test_result 1 "iptables rules not loaded"
fi

{% elif firewall_type == 'nftables' %}
if nft list ruleset | grep -q "table"; then
    test_result 0 "nftables rules loaded"
else
    test_result 1 "nftables rules not loaded"
fi
{% endif %}

{% if allow_ssh %}
# Test 2: SSH port is accessible
echo "Testing SSH port {{ ssh_port }}..."
if nc -z -w 5 localhost {{ ssh_port }} 2>/dev/null; then
    test_result 0 "SSH port {{ ssh_port }} is accessible"
else
    test_result 1 "SSH port {{ ssh_port }} is not accessible"
fi
{% endif %}

{% if server_role == 'web' %}
# Test 3: HTTP port
echo "Testing HTTP port 80..."
if nc -z -w 5 localhost 80 2>/dev/null; then
    test_result 0 "HTTP port 80 is accessible"
else
    test_result 1 "HTTP port 80 is not accessible"
fi

# Test 4: HTTPS port
echo "Testing HTTPS port 443..."
if nc -z -w 5 localhost 443 2>/dev/null; then
    test_result 0 "HTTPS port 443 is accessible"
else
    test_result 1 "HTTPS port 443 is not accessible"
fi
{% endif %}

# Test 5: Default policy
echo "Testing default policy..."
{% if firewall_type == 'ufw' %}
if ufw status verbose | grep -q "Default: {{ default_policy }} (incoming)"; then
    test_result 0 "Default policy is {{ default_policy }}"
else
    test_result 1 "Default policy is not {{ default_policy }}"
fi
{% endif %}

{% if enable_logging %}
# Test 6: Logging is enabled
echo "Testing firewall logging..."
{% if firewall_type == 'ufw' %}
if ufw status verbose | grep -q "Logging: on"; then
    test_result 0 "Logging is enabled"
else
    test_result 1 "Logging is not enabled"
fi
{% endif %}
{% endif %}

# Summary
echo ""
echo -e "${BLUE}==> Test Summary${NC}"
echo -e "Passed: ${GREEN}${PASSED}${NC}"
echo -e "Failed: ${RED}${FAILED}${NC}"
echo ""

if [ ${FAILED} -eq 0 ]; then
    echo -e "${GREEN}All tests passed!${NC}"
    exit 0
else
    echo -e "${YELLOW}Some tests failed. Review configuration.${NC}"
    exit 1
fi
{% endif %}
