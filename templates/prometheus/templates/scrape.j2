{% if configuration_mode == 'simple' %}
# Simple scrape configuration for {{ job_name }}
# Generated by OpsArtisan

- job_name: '{{ job_name }}'
  metrics_path: '{{ metrics_path }}'
  scrape_interval: {{ scrape_interval }}
  static_configs:
    - targets:
      {% for target in static_targets.split(',') %}
        - '{{ target.strip() }}'
      {% endfor %}

{% else %}
# Advanced scrape configuration for {{ job_name }}
# Generated by OpsArtisan

- job_name: '{{ job_name }}'
  {% if scrape_interval %}
  scrape_interval: {{ scrape_interval }}
  {% endif %}
  {% if scrape_timeout %}
  scrape_timeout: {{ scrape_timeout }}
  {% endif %}
  metrics_path: '{{ metrics_path }}'

  {% if target_type == 'static' %}
  static_configs:
    - targets:
      {% for target in static_targets.split(',') %}
        - '{{ target.strip() }}'
      {% endfor %}
      labels:
        env: 'production'
        job: '{{ job_name }}'

  {% elif target_type == 'kubernetes' %}
  kubernetes_sd_configs:
    - role: {{ kubernetes_role }}
      namespaces:
        names:
          - default
          - production

  {% elif target_type == 'consul' %}
  consul_sd_configs:
    - server: 'localhost:8500'
      services:
        - {{ job_name }}

  {% elif target_type == 'ec2' %}
  ec2_sd_configs:
    - region: us-east-1
      port: 9090
      filters:
        - name: tag:monitoring
          values:
            - 'enabled'

  {% elif target_type == 'dns' %}
  dns_sd_configs:
    - names:
        - '{{ job_name }}.example.com'
      type: 'A'
      port: 9090
  {% endif %}

  {% if include_basic_auth %}
  basic_auth:
    username: 'prometheus'
    password_file: '/etc/prometheus/password.txt'
  {% endif %}

  {% if include_tls %}
  tls_config:
    ca_file: '/etc/prometheus/ca.crt'
    cert_file: '/etc/prometheus/client.crt'
    key_file: '/etc/prometheus/client.key'
    insecure_skip_verify: false
  {% endif %}

  {% if relabel_configs %}
  relabel_configs:
    # Keep only metrics from targets with specific labels
    - source_labels: [__meta_kubernetes_pod_label_app]
      action: keep
      regex: {{ job_name }}

    # Rename instance label
    - source_labels: [__address__]
      target_label: instance

    # Add custom labels
    - source_labels: [__meta_kubernetes_namespace]
      target_label: kubernetes_namespace

    - source_labels: [__meta_kubernetes_pod_name]
      target_label: kubernetes_pod_name

  metric_relabel_configs:
    # Drop expensive metrics
    - source_labels: [__name__]
      regex: 'go_.*'
      action: drop
  {% endif %}

  # Honor labels from targets
  honor_labels: true
  honor_timestamps: true
{% endif %}
