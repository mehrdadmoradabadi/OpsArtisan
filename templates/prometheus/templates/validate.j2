#!/bin/bash
#
# Validate Prometheus configuration
# Generated by OpsArtisan
#

set -euo pipefail

echo "==> Validating Prometheus configuration"

{% if config_type == 'full' %}
# Validate main config
if command -v promtool &> /dev/null; then
    echo "Validating prometheus.yml..."
    promtool check config prometheus.yml
else
    echo "WARNING: promtool not found, skipping validation"
fi
{% endif %}

# Validate scrape configs
if [ -d "scrape-configs" ] && [ "$(ls -A scrape-configs/*.yml 2>/dev/null)" ]; then
    echo "Validating scrape configs..."
    for file in scrape-configs/*.yml; do
        echo "  - $file"
        if command -v promtool &> /dev/null; then
            # Create temp config to validate scrape config
            cat > /tmp/test-prometheus.yml << EOF
global:
  scrape_interval: 15s
scrape_configs:
$(cat "$file")
EOF
            promtool check config /tmp/test-prometheus.yml
            rm /tmp/test-prometheus.yml
        fi
    done
fi

# Validate alert rules
if [ -d "rules" ] && [ "$(ls -A rules/*-alerts.yml 2>/dev/null)" ]; then
    echo "Validating alert rules..."
    for file in rules/*-alerts.yml; do
        echo "  - $file"
        if command -v promtool &> /dev/null; then
            promtool check rules "$file"
        fi
    done
fi

# Validate recording rules
if [ -d "rules" ] && [ "$(ls -A rules/*-recording.yml 2>/dev/null)" ]; then
    echo "Validating recording rules..."
    for file in rules/*-recording.yml; do
        echo "  - $file"
        if command -v promtool &> /dev/null; then
            promtool check rules "$file"
        fi
    done
fi

{% if include_alerts and configuration_mode == 'advanced' %}
# Validate alertmanager config
if [ -f "alertmanager.yml" ]; then
    echo "Validating alertmanager.yml..."
    if command -v amtool &> /dev/null; then
        amtool check-config alertmanager.yml
    elif command -v promtool &> /dev/null; then
        promtool check alertmanager-config alertmanager.yml
    fi
fi
{% endif %}

echo ""
echo "==> Validation complete!"
