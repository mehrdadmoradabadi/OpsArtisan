#!/bin/bash
#
# Certificate renewal script (self-signed)
# Generated by OpsArtisan
#

set -euo pipefail

CN="{{ common_name }}"
{% if configuration_mode == 'advanced' %}
OUTPUT_DIR="{{ output_directory }}"
DAYS_VALID={{ days_valid }}
{% else %}
OUTPUT_DIR="./certs"
DAYS_VALID=365
{% endif %}

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}==> Certificate Renewal${NC}"
echo ""

cd "${OUTPUT_DIR}"

# Check if certificate exists
if [ ! -f "${CN}.crt" ]; then
    echo -e "${RED}ERROR: Certificate ${CN}.crt not found${NC}"
    exit 1
fi

# Check if key exists
if [ ! -f "${CN}.key" ]; then
    echo -e "${RED}ERROR: Private key ${CN}.key not found${NC}"
    exit 1
fi

# Show current certificate info
echo "Current certificate:"
echo "  Subject: $(openssl x509 -in "${CN}.crt" -noout -subject)"
echo "  Valid until: $(openssl x509 -in "${CN}.crt" -noout -enddate | cut -d'=' -f2)"
echo ""

# Check if certificate is expired or expiring soon
if ! openssl x509 -in "${CN}.crt" -noout -checkend 0 >/dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  Certificate has expired${NC}"
elif ! openssl x509 -in "${CN}.crt" -noout -checkend 2592000 >/dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  Certificate expires within 30 days${NC}"
else
    echo -e "${GREEN}ℹ️  Certificate is still valid for >30 days${NC}"
fi

echo ""
read -p "Do you want to renew this certificate? (y/N) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Renewal cancelled"
    exit 0
fi

# Backup old certificate
BACKUP_FILE="${CN}.crt.backup.$(date +%Y%m%d_%H%M%S)"
echo "==> Backing up current certificate to ${BACKUP_FILE}"
cp "${CN}.crt" "${BACKUP_FILE}"

# Renew certificate using existing key and config
echo "==> Generating new certificate (valid for ${DAYS_VALID} days)"

{% if include_san or cert_type == 'ca' %}
# Use config file for SAN
CONFIG_FILE="../configs/openssl.cnf"
openssl req -new -x509 -key "${CN}.key" -out "${CN}.crt" \
    -days ${DAYS_VALID} \
    -config "${CONFIG_FILE}" \
    {% if cert_type == 'ca' %}-extensions v3_ca{% else %}-extensions v3_req{% endif %}
{% else %}
# Simple renewal without SAN
openssl req -new -x509 -key "${CN}.key" -out "${CN}.crt" \
    -days ${DAYS_VALID} \
    -subj "$(openssl x509 -in "${BACKUP_FILE}" -noout -subject | sed 's/subject=//')"
{% endif %}

if [ $? -eq 0 ]; then
    echo -e "${GREEN}✓ Certificate renewed successfully${NC}"
    echo ""
    echo "New certificate:"
    echo "  Valid from: $(openssl x509 -in "${CN}.crt" -noout -startdate | cut -d'=' -f2)"
    echo "  Valid until: $(openssl x509 -in "${CN}.crt" -noout -enddate | cut -d'=' -f2)"
    echo ""
    echo -e "${YELLOW}Next steps:${NC}"
    echo "  1. Verify certificate: bash scripts/verify-cert.sh"
    echo "  2. Deploy to web server"
    echo "  3. Restart web server service"
    echo "  4. Test: curl -v https://{{ common_name }}"
    echo ""
    echo "Backup saved: ${BACKUP_FILE}"
else
    echo -e "${RED}ERROR: Certificate renewal failed${NC}"
    echo "Restoring backup..."
    cp "${BACKUP_FILE}" "${CN}.crt"
    exit 1
fi