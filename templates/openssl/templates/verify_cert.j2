#!/bin/bash
#
# Certificate verification script
# Generated by OpsArtisan
#

set -euo pipefail

CN="{{ common_name }}"
{% if configuration_mode == 'advanced' %}
OUTPUT_DIR="{{ output_directory }}"
{% else %}
OUTPUT_DIR="./certs"
{% endif %}

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}==> Certificate Verification${NC}"
echo ""

cd "${OUTPUT_DIR}"

{% if cert_type != 'csr' %}
# Check if certificate exists
if [ ! -f "${CN}.crt" ]; then
    echo "ERROR: Certificate ${CN}.crt not found"
    exit 1
fi

echo -e "${GREEN}Certificate Details:${NC}"
echo "-------------------"
openssl x509 -in "${CN}.crt" -text -noout

echo ""
echo -e "${GREEN}Certificate Summary:${NC}"
echo "-------------------"
echo "Subject:"
openssl x509 -in "${CN}.crt" -noout -subject

echo ""
echo "Issuer:"
openssl x509 -in "${CN}.crt" -noout -issuer

echo ""
echo "Validity:"
openssl x509 -in "${CN}.crt" -noout -dates

echo ""
echo "Fingerprints:"
echo -n "  SHA256: "
openssl x509 -in "${CN}.crt" -noout -fingerprint -sha256 | cut -d'=' -f2
echo -n "  SHA1:   "
openssl x509 -in "${CN}.crt" -noout -fingerprint -sha1 | cut -d'=' -f2

{% if include_san %}
echo ""
echo "Subject Alternative Names:"
openssl x509 -in "${CN}.crt" -noout -text | grep -A1 "Subject Alternative Name" | tail -n1 | sed 's/^ */  /'
{% endif %}

echo ""
echo -e "${GREEN}Key Information:${NC}"
echo "-------------------"
{% if key_algorithm == 'ec' and configuration_mode == 'advanced' %}
openssl ec -in "${CN}.key" -text -noout 2>/dev/null | head -n 3
{% else %}
openssl rsa -in "${CN}.key" -text -noout 2>/dev/null | head -n 1
{% endif %}

echo ""
echo -e "${GREEN}Verification:${NC}"
echo "-------------------"

# Verify private key matches certificate
KEY_MODULUS=$(openssl {% if key_algorithm == 'ec' and configuration_mode == 'advanced' %}ec{% else %}rsa{% endif %} -in "${CN}.key" -noout -modulus 2>/dev/null | openssl md5)
CERT_MODULUS=$(openssl x509 -in "${CN}.crt" -noout -modulus | openssl md5)

if [ "$KEY_MODULUS" = "$CERT_MODULUS" ]; then
    echo -e "${GREEN}âœ" Private key matches certificate${NC}"
else
    echo -e "${YELLOW}âš ï¸ Warning: Private key does not match certificate${NC}"
fi

# Check certificate validity
if openssl x509 -in "${CN}.crt" -noout -checkend 0 >/dev/null 2>&1; then
    echo -e "${GREEN}âœ" Certificate is currently valid${NC}"
else
    echo -e "${YELLOW}âš ï¸ Warning: Certificate has expired${NC}"
fi

# Check if expiring soon (30 days)
if openssl x509 -in "${CN}.crt" -noout -checkend 2592000 >/dev/null 2>&1; then
    echo -e "${GREEN}âœ" Certificate valid for >30 days${NC}"
else
    echo -e "${YELLOW}âš ï¸ Warning: Certificate expires within 30 days${NC}"
fi

{% else %}
# CSR verification
if [ ! -f "${CN}.csr" ]; then
    echo "ERROR: CSR ${CN}.csr not found"
    exit 1
fi

echo -e "${GREEN}CSR Details:${NC}"
echo "-------------------"
openssl req -in "${CN}.csr" -text -noout

echo ""
echo -e "${GREEN}CSR Verification:${NC}"
echo "-------------------"

# Verify CSR signature
if openssl req -in "${CN}.csr" -noout -verify >/dev/null 2>&1; then
    echo -e "${GREEN}âœ" CSR signature verified${NC}"
else
    echo -e "${YELLOW}âš ï¸ Warning: CSR signature verification failed${NC}"
fi

# Verify CSR matches private key
CSR_MODULUS=$(openssl req -in "${CN}.csr" -noout -modulus | openssl md5)
KEY_MODULUS=$(openssl {% if key_algorithm == 'ec' and configuration_mode == 'advanced' %}ec{% else %}rsa{% endif %} -in "${CN}.key" -noout -modulus 2>/dev/null | openssl md5)

if [ "$CSR_MODULUS" = "$KEY_MODULUS" ]; then
    echo -e "${GREEN}✓ Private key matches CSR${NC}"
else
    echo -e "${YELLOW}⚠️ Warning: Private key does not match CSR${NC}"
fi
{% endif %}

echo ""
echo -e "${BLUE}==> Verification complete${NC}"