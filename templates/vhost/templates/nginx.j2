{% if configuration_mode == 'simple' %}
# Simple Nginx configuration for {{ server_name }}
# Generated by OpsArtisan

server {
    listen 80;
    {% if tls_enabled %}
    listen 443 ssl;
    {% endif %}

    server_name {{ server_name }};
    root {{ root_dir }};
    index index.html index.htm;

    {% if tls_enabled %}
    ssl_certificate {{ tls_cert }};
    ssl_certificate_key {{ tls_key }};
    {% endif %}

    location / {
        try_files $uri $uri/ =404;
    }
}

{% else %}
# Advanced Nginx configuration for {{ server_name }}
# Generated by OpsArtisan

{% if rate_limiting %}
# Rate limiting zone
limit_req_zone $binary_remote_addr zone={{ server_name | replace('.', '_') }}_limit:10m rate=10r/s;
limit_req_status 429;

{% endif %}
{% if redirect_http_to_https and tls_enabled %}
# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;

    server_name {{ server_name }}{% if server_aliases %} {{ server_aliases }}{% endif %};

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

{% endif %}
# HTTPS server block
server {
    {% if tls_enabled %}
    listen 443 ssl{% if http2_enabled %} http2{% endif %};
    listen [::]:443 ssl{% if http2_enabled %} http2{% endif %};
    {% else %}
    listen 80;
    listen [::]:80;
    {% endif %}

    server_name {{ server_name }}{% if server_aliases %} {{ server_aliases }}{% endif %};
    root {{ root_dir }};

    {% if application_type == 'spa' %}
    index index.html;
    {% elif application_type == 'php' %}
    index index.php index.html index.htm;
    {% else %}
    index index.html index.htm;
    {% endif %}

    {% if tls_enabled %}
    # SSL Configuration
    ssl_certificate {{ tls_cert }};
    ssl_certificate_key {{ tls_key }};

    # Modern SSL configuration (Mozilla Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL Session
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate {{ tls_cert }};
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    {% endif %}

    {% if security_headers %}
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    {% endif %}

    {% if gzip_enabled %}
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    {% endif %}

    # Logging
    access_log {{ access_log }};
    error_log {{ error_log }} warn;

    {% if rate_limiting %}
    # Rate limiting
    limit_req zone={{ server_name | replace('.', '_') }}_limit burst=20 nodelay;
    {% endif %}

    {% if application_type == 'static' or application_type == 'spa' %}
    # Static files
    location / {
        {% if application_type == 'spa' %}
        try_files $uri $uri/ /index.html;
        {% else %}
        try_files $uri $uri/ =404;
        {% endif %}
    }

    {% if caching %}
    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    {% endif %}

    {% elif application_type == 'php' %}
    # PHP-FPM configuration
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php{{ php_version }}-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    {% if caching %}
    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    {% endif %}

    {% elif application_type == 'proxy' %}
    # Reverse proxy configuration
    location / {
        proxy_pass {{ proxy_pass }};
        proxy_http_version 1.1;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    {% endif %}

    # Deny access to sensitive files
    location ~ /\.(ht|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
{% endif %}
