{% if enable_logging %}
#!/bin/bash
#
# Log viewer for {{ service_name }} service
# Generated by OpsArtisan
#

set -euo pipefail

SERVICE_NAME="{{ service_name }}"

# Colors
BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

show_help() {
    cat << EOF
${BLUE}{{ service_name }} Log Viewer${NC}

Usage: $0 [options]

Options:
  -f, --follow        Follow log output (tail -f)
  -n, --lines NUM     Show last NUM lines (default: 50)
  -p, --priority LEVEL  Filter by priority (0-7, emerg-debug)
  -s, --since TIME    Show logs since TIME (e.g., "1 hour ago", "2023-01-01")
  -u, --until TIME    Show logs until TIME
  -g, --grep PATTERN  Filter logs by pattern
  --json              Output in JSON format
  --no-pager          Don't use pager
  -h, --help          Show this help

Priority Levels:
  0 emerg     System is unusable
  1 alert     Action must be taken immediately
  2 crit      Critical conditions
  3 err       Error conditions
  4 warning   Warning conditions
  5 notice    Normal but significant condition
  6 info      Informational messages
  7 debug     Debug-level messages

Examples:
  $0 -f                          # Follow logs
  $0 -n 100                      # Show last 100 lines
  $0 --since "1 hour ago"        # Logs from last hour
  $0 -p err                      # Show only errors
  $0 -g "database"               # Filter for "database"

EOF
}

# Default options
FOLLOW=false
LINES=50
PRIORITY=""
SINCE=""
UNTIL=""
GREP=""
JSON=false
NO_PAGER=false

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -f|--follow)
            FOLLOW=true
            shift
            ;;
        -n|--lines)
            LINES="$2"
            shift 2
            ;;
        -p|--priority)
            PRIORITY="$2"
            shift 2
            ;;
        -s|--since)
            SINCE="$2"
            shift 2
            ;;
        -u|--until)
            UNTIL="$2"
            shift 2
            ;;
        -g|--grep)
            GREP="$2"
            shift 2
            ;;
        --json)
            JSON=true
            shift
            ;;
        --no-pager)
            NO_PAGER=true
            shift
            ;;
        -h|--help)
            show_help
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            show_help
            exit 1
            ;;
    esac
done

# Build journalctl command
CMD="journalctl -u ${SERVICE_NAME}"

if [ "$FOLLOW" = true ]; then
    CMD="${CMD} -f"
else
    CMD="${CMD} -n ${LINES}"
fi

if [ -n "$PRIORITY" ]; then
    CMD="${CMD} -p ${PRIORITY}"
fi

if [ -n "$SINCE" ]; then
    CMD="${CMD} --since '${SINCE}'"
fi

if [ -n "$UNTIL" ]; then
    CMD="${CMD} --until '${UNTIL}'"
fi

if [ "$JSON" = true ]; then
    CMD="${CMD} -o json"
fi

if [ "$NO_PAGER" = true ]; then
    CMD="${CMD} --no-pager"
fi

if [ -n "$GREP" ]; then
    CMD="${CMD} | grep --color=auto '${GREP}'"
fi

# Show what we're doing
echo -e "${BLUE}==> Viewing logs for ${SERVICE_NAME}${NC}"
if [ "$FOLLOW" = true ]; then
    echo -e "${YELLOW}Following logs... Press Ctrl+C to exit${NC}"
fi
echo ""

# Execute
eval ${CMD}
{% endif %}
