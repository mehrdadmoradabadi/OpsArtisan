#!/bin/bash
#
# SSH configuration script for {{ username }}
# Generated by OpsArtisan
#

set -euo pipefail

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    echo "ERROR: This script must be run as root"
    exit 1
fi

USERNAME="{{ username }}"
{% if configuration_mode == 'advanced' %}
HOME_DIR="{{ home_directory }}"
{% else %}
HOME_DIR="/home/{{ username }}"
{% endif %}
SSH_DIR="${HOME_DIR}/.ssh"
AUTHORIZED_KEYS="${SSH_DIR}/authorized_keys"

echo "==> Configuring SSH for ${USERNAME}"

# Create .ssh directory
if [ ! -d "${SSH_DIR}" ]; then
    echo "==> Creating .ssh directory"
    mkdir -p "${SSH_DIR}"
    chmod 700 "${SSH_DIR}"
fi

{% if ssh_public_key %}
# Add SSH public key
echo "==> Adding SSH public key"
cat > "${AUTHORIZED_KEYS}" << 'EOF'
{{ ssh_public_key }}
EOF
{% else %}
# Copy authorized_keys if exists
if [ -f "authorized_keys" ]; then
    echo "==> Installing authorized_keys"
    cp authorized_keys "${AUTHORIZED_KEYS}"
else
    echo "WARNING: No SSH public key provided"
    echo "You can manually add keys to: ${AUTHORIZED_KEYS}"
    touch "${AUTHORIZED_KEYS}"
fi
{% endif %}

# Set proper permissions
chmod 600 "${AUTHORIZED_KEYS}"
chown -R "${USERNAME}:${USERNAME}" "${SSH_DIR}"

echo "==> SSH key installed successfully"

{% if disable_password_auth and configuration_mode == 'advanced' %}
# Disable password authentication
echo "==> Disabling password authentication for ${USERNAME}"
passwd -l "${USERNAME}"
echo "    - Password authentication disabled"
echo "    - SSH key authentication required"
{% endif %}

# Test SSH directory permissions
echo ""
echo "==> Verifying permissions"
ls -la "${SSH_DIR}"
ls -la "${AUTHORIZED_KEYS}"

echo ""
echo "==> SSH configuration complete!"
echo "Test connection with: ssh {{ username }}@hostname"
