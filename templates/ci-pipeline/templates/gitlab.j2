{% if configuration_mode == 'simple' %}
# Simple GitLab CI for {{ language }}
{% else %}
# Advanced GitLab CI/CD Pipeline for {{ language }}
{% endif %}
# Generated by OpsArtisan

{% if configuration_mode == 'advanced' %}
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_IID

{% endif %}
variables:
  {% if language == 'python' %}
  PYTHON_VERSION: "{{ language_version }}"
  {% elif language == 'node' %}
  NODE_VERSION: "{{ language_version }}"
  {% elif language == 'go' %}
  GO_VERSION: "{{ language_version }}"
  {% endif %}
  {% if include_docker %}
  DOCKER_IMAGE: {{ docker_image_name }}
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  {% endif %}

{% if configuration_mode == 'advanced' %}
cache:
  paths:
    {% if language == 'python' %}
    - .cache/pip
    {% elif language == 'node' %}
    - node_modules/
    {% elif language == 'go' %}
    - .go/pkg/mod
    {% endif %}

{% endif %}
stages:
  {% if include_lint and configuration_mode == 'advanced' %}- lint{% endif %}
  - test
  {% if include_security_scan and configuration_mode == 'advanced' %}- security{% endif %}
  {% if include_docker %}- build{% endif %}
  {% if include_deploy %}- deploy{% endif %}

{% if include_lint and configuration_mode == 'advanced' %}
lint:
  stage: lint
  image: {% if language == 'python' %}python:{{ language_version }}{% elif language == 'node' %}node:{{ language_version }}{% elif language == 'go' %}golang:{{ language_version }}{% endif %}
  script:
    {% if language == 'python' %}
    - pip install flake8 black
    - flake8 .
    - black --check .
    {% elif language == 'node' %}
    - {{ package_manager if package_manager else 'npm' }} install
    - {{ package_manager if package_manager else 'npm' }} run lint
    {% elif language == 'go' %}
    - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    - golangci-lint run
    {% endif %}

{% endif %}
test:
  stage: test
  image: {% if language == 'python' %}python:{{ language_version }}{% elif language == 'node' %}node:{{ language_version }}{% elif language == 'go' %}golang:{{ language_version }}{% elif language == 'rust' %}rust:latest{% endif %}
  script:
    {% if language == 'python' %}
    - pip install -r requirements.txt
    {% if include_tests %}- pip install pytest pytest-cov{% endif %}
    {% if include_tests %}- {{ test_command if configuration_mode == 'advanced' and test_command else 'pytest' }}{% if configuration_mode == 'advanced' %} --cov --cov-report=xml{% endif %}{% endif %}
    {% elif language == 'node' %}
    - {{ package_manager if package_manager else 'npm' }} {% if package_manager == 'npm' %}ci{% else %}install --frozen-lockfile{% endif %}
    {% if include_tests %}- {{ package_manager if package_manager else 'npm' }} test{% endif %}
    {% elif language == 'go' %}
    - go mod download
    {% if include_tests %}- go test -v ./...{% endif %}
    {% elif language == 'rust' %}
    {% if include_tests %}- cargo test{% endif %}
    {% endif %}
  {% if configuration_mode == 'advanced' and include_tests %}
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  {% endif %}

{% if include_security_scan and configuration_mode == 'advanced' %}
security:
  stage: security
  image: aquasec/trivy:latest
  script:
    - trivy fs --exit-code 0 --severity HIGH,CRITICAL .

{% endif %}
{% if include_docker %}
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker build -t $DOCKER_IMAGE:latest .
    {% if configuration_mode == 'advanced' %}
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest
    {% endif %}

{% endif %}
{% if include_deploy %}
deploy:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache bash curl
    - bash scripts/deploy.sh
  environment:
    name: {{ deploy_environment if configuration_mode == 'advanced' else 'production' }}
    url: https://{{ deploy_environment if configuration_mode == 'advanced' else 'production' }}.example.com
  {% if require_approval and configuration_mode == 'advanced' %}
  when: manual
  {% endif %}
  only:
    {% if configuration_mode == 'advanced' and trigger_on %}
    {% for branch in trigger_on.split(',') %}
    - {{ branch.strip() }}
    {% endfor %}
    {% else %}
    - main
    - master
    {% endif %}

{% endif %}
