#!/bin/bash
#
# Deployment script for {{ deploy_environment if configuration_mode == 'advanced' else 'production' }}
# Generated by OpsArtisan
#

set -euo pipefail

# Configuration
{% if configuration_mode == 'advanced' %}
ENVIRONMENT="${ENVIRONMENT:-{{ deploy_environment }}}"
{% else %}
ENVIRONMENT="production"
{% endif %}
{% if include_docker %}
IMAGE="{{ docker_image_name }}"
TAG="${DOCKER_TAG:-latest}"
{% endif %}

echo "==> Deploying to ${ENVIRONMENT}"

{% if deploy_target == 'kubernetes' and configuration_mode == 'advanced' %}
# Kubernetes deployment
echo "==> Deploying to Kubernetes"

# Set kubectl context
kubectl config use-context ${ENVIRONMENT}

# Update image
kubectl set image deployment/{{ docker_image_name }} \
    {{ docker_image_name }}=${IMAGE}:${TAG} \
    --namespace=${ENVIRONMENT}

# Wait for rollout
kubectl rollout status deployment/{{ docker_image_name }} \
    --namespace=${ENVIRONMENT} \
    --timeout=5m

echo "==> Deployment complete"

{% elif deploy_target == 'aws' and configuration_mode == 'advanced' %}
# AWS deployment
echo "==> Deploying to AWS"

# Update ECS service
aws ecs update-service \
    --cluster ${ENVIRONMENT}-cluster \
    --service {{ docker_image_name }}-service \
    --force-new-deployment

echo "==> Deployment initiated"

{% elif deploy_target == 'heroku' and configuration_mode == 'advanced' %}
# Heroku deployment
echo "==> Deploying to Heroku"

# Push to Heroku
git push heroku main

echo "==> Deployment complete"

{% else %}
# Custom deployment
echo "==> Running custom deployment"

# Add your deployment commands here
# Examples:
# - SSH to server and pull latest code
# - Copy files via rsync
# - Restart services
# - Run database migrations

{% if include_docker %}
# Docker deployment example
# ssh user@server "docker pull ${IMAGE}:${TAG} && docker-compose up -d"
{% else %}
# Standard deployment example
# rsync -avz --exclude='.git' ./ user@server:/app/
# ssh user@server "cd /app && systemctl restart myapp"
{% endif %}

echo "TODO: Add your deployment commands"

{% endif %}

# Health check
echo "==> Running health check"
sleep 5

{% if configuration_mode == 'advanced' %}
HEALTH_URL="https://{{ deploy_environment }}.example.com/health"
{% else %}
HEALTH_URL="https://example.com/health"
{% endif %}

if curl -f -s "${HEALTH_URL}" > /dev/null; then
    echo "✅ Health check passed"
    exit 0
else
    echo "❌ Health check failed"
    exit 1
fi
