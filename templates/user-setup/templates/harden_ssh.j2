#!/bin/bash
#
# SSH hardening script
# Generated by OpsArtisan
#

set -euo pipefail

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    echo "ERROR: This script must be run as root"
    exit 1
fi

SSHD_CONFIG="/etc/ssh/sshd_config"
SSHD_CONFIG_BACKUP="/etc/ssh/sshd_config.backup.$(date +%Y%m%d_%H%M%S)"

echo "==> Hardening SSH configuration"

# Backup current config
echo "==> Backing up current SSH config to ${SSHD_CONFIG_BACKUP}"
cp "${SSHD_CONFIG}" "${SSHD_CONFIG_BACKUP}"

{% if disable_root_login %}
# Disable root login
echo "==> Disabling root SSH login"
sed -i 's/^#*PermitRootLogin.*/PermitRootLogin no/' "${SSHD_CONFIG}"
if ! grep -q "^PermitRootLogin" "${SSHD_CONFIG}"; then
    echo "PermitRootLogin no" >> "${SSHD_CONFIG}"
fi
{% endif %}

{% if disable_password_auth and configuration_mode == 'advanced' %}
# Disable password authentication
echo "==> Disabling password authentication"
sed -i 's/^#*PasswordAuthentication.*/PasswordAuthentication no/' "${SSHD_CONFIG}"
if ! grep -q "^PasswordAuthentication" "${SSHD_CONFIG}"; then
    echo "PasswordAuthentication no" >> "${SSHD_CONFIG}"
fi

# Disable challenge-response
sed -i 's/^#*ChallengeResponseAuthentication.*/ChallengeResponseAuthentication no/' "${SSHD_CONFIG}"
if ! grep -q "^ChallengeResponseAuthentication" "${SSHD_CONFIG}"; then
    echo "ChallengeResponseAuthentication no" >> "${SSHD_CONFIG}"
fi
{% endif %}

# Additional security settings
echo "==> Applying additional security settings"

# Disable empty passwords
sed -i 's/^#*PermitEmptyPasswords.*/PermitEmptyPasswords no/' "${SSHD_CONFIG}"
if ! grep -q "^PermitEmptyPasswords" "${SSHD_CONFIG}"; then
    echo "PermitEmptyPasswords no" >> "${SSHD_CONFIG}"
fi

# Use protocol 2 only
if ! grep -q "^Protocol 2" "${SSHD_CONFIG}"; then
    echo "Protocol 2" >> "${SSHD_CONFIG}"
fi

# Set login grace time
sed -i 's/^#*LoginGraceTime.*/LoginGraceTime 60/' "${SSHD_CONFIG}"
if ! grep -q "^LoginGraceTime" "${SSHD_CONFIG}"; then
    echo "LoginGraceTime 60" >> "${SSHD_CONFIG}"
fi

# Set max auth tries
sed -i 's/^#*MaxAuthTries.*/MaxAuthTries 3/' "${SSHD_CONFIG}"
if ! grep -q "^MaxAuthTries" "${SSHD_CONFIG}"; then
    echo "MaxAuthTries 3" >> "${SSHD_CONFIG}"
fi

# Test configuration
echo "==> Testing SSH configuration"
if sshd -t; then
    echo "==> Configuration valid"

    # Restart SSH service
    echo "==> Restarting SSH service"
    if systemctl is-active --quiet sshd; then
        systemctl restart sshd
    elif systemctl is-active --quiet ssh; then
        systemctl restart ssh
    else
        echo "WARNING: Could not detect SSH service name"
        echo "Please restart SSH manually"
    fi

    echo ""
    echo "==> SSH hardening complete!"
    echo ""
    echo "IMPORTANT: Test your SSH connection in a new terminal before closing this one!"
    echo "If locked out, restore from backup: cp ${SSHD_CONFIG_BACKUP} ${SSHD_CONFIG}"
else
    echo "ERROR: SSH configuration test failed"
    echo "Restoring backup..."
    cp "${SSHD_CONFIG_BACKUP}" "${SSHD_CONFIG}"
    exit 1
fi
