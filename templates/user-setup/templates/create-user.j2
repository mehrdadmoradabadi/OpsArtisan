#!/bin/bash
#
# User creation script for {{ username }}
{% if configuration_mode == 'simple' %}
# Configuration: Simple
{% else %}
# Configuration: Advanced
{% endif %}
# Generated by OpsArtisan
#

set -euo pipefail

# Check if running as root
if [ "$EUID" -ne 0 ]; then
    echo "ERROR: This script must be run as root"
    exit 1
fi

# Variables
USERNAME="{{ username }}"
{% if configuration_mode == 'advanced' %}
FULL_NAME="{{ full_name }}"
SHELL="{{ shell }}"
HOME_DIR="{{ home_directory }}"
{% if uid %}
UID="{{ uid }}"
{% endif %}
{% if umask %}
UMASK="{{ umask }}"
{% endif %}
{% else %}
SHELL="/bin/bash"
HOME_DIR="/home/{{ username }}"
{% endif %}

echo "==> Creating user: ${USERNAME}"

# Check if user already exists
if id "${USERNAME}" &>/dev/null; then
    echo "WARNING: User ${USERNAME} already exists"
    read -p "Do you want to continue with configuration? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
else
    # Create user
    {% if configuration_mode == 'advanced' %}
    useradd \
        {% if create_home %}--create-home \{% endif %}
        --home-dir "${HOME_DIR}" \
        --shell "${SHELL}" \
        {% if uid %}--uid "${UID}" \{% endif %}
        {% if full_name %}--comment "${FULL_NAME}" \{% endif %}
        "${USERNAME}"
    {% else %}
    useradd -m -s "${SHELL}" "${USERNAME}"
    {% endif %}

    echo "==> User ${USERNAME} created successfully"
fi

{% if sudo_access %}
# Add user to sudo group
echo "==> Adding ${USERNAME} to sudo group"
{% if configuration_mode == 'advanced' %}
usermod -aG sudo,{{ additional_groups }} "${USERNAME}"
{% else %}
usermod -aG sudo "${USERNAME}"
{% endif %}
{% endif %}

{% if configuration_mode == 'advanced' and additional_groups %}
# Add to additional groups
echo "==> Adding ${USERNAME} to additional groups"
IFS=',' read -ra GROUPS <<< "{{ additional_groups }}"
for group in "${GROUPS[@]}"; do
    group=$(echo "$group" | xargs)  # trim whitespace
    if getent group "$group" > /dev/null 2>&1; then
        usermod -aG "$group" "${USERNAME}"
        echo "    - Added to group: $group"
    else
        echo "    - WARNING: Group $group does not exist, skipping"
    fi
done
{% endif %}

{% if password_required and configuration_mode == 'advanced' %}
# Set password
echo "==> Setting password for ${USERNAME}"
echo "Please enter password for ${USERNAME}:"
passwd "${USERNAME}"

{% if password_expiry %}
# Set password expiry
echo "==> Configuring password expiry"
chage -M {{ password_expiry_days }} "${USERNAME}"
chage -W 7 "${USERNAME}"
echo "    - Password expires in {{ password_expiry_days }} days"
echo "    - Warning 7 days before expiry"
{% endif %}
{% else %}
# Lock password (use SSH key authentication only)
echo "==> Locking password (SSH key authentication recommended)"
passwd -l "${USERNAME}"
{% endif %}

{% if configuration_mode == 'advanced' and umask %}
# Set default umask
echo "==> Setting default umask to {{ umask }}"
if [ -f "${HOME_DIR}/.bashrc" ]; then
    echo "umask {{ umask }}" >> "${HOME_DIR}/.bashrc"
fi
if [ -f "${HOME_DIR}/.profile" ]; then
    echo "umask {{ umask }}" >> "${HOME_DIR}/.profile"
fi
{% endif %}

# Set proper ownership
chown -R "${USERNAME}:${USERNAME}" "${HOME_DIR}"

echo ""
echo "==> User setup complete!"
echo "    Username: ${USERNAME}"
echo "    Home: ${HOME_DIR}"
echo "    Shell: ${SHELL}"
{% if sudo_access %}
echo "    Sudo: Enabled"
{% endif %}
echo ""
echo "Next steps:"
{% if ssh_key_setup %}
echo "  1. Run: sudo bash scripts/configure-ssh.sh"
{% endif %}
echo "  2. Test login: su - ${USERNAME}"
{% if sudo_access %}
echo "  3. Test sudo: sudo -u ${USERNAME} sudo -v"
{% endif %}
